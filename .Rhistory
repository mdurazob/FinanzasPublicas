knitr::opts_chunk$set(echo = TRUE)
library(tseries)
CostoFinanciero <- read_csv("costoFinancieroSerie.csv")
library(tseries)
CostoFinanciero <- read_csv("costoFinancieroSerie.csv")
library(tseries)
library(readr)
CostoFinanciero <- read_csv("costoFinancieroSerie.csv")
TSIngresosPresupuestarios <- ts(IngresosPresupuestarios, start = c(2016, 10), end = c(2020,4), frequency=12)
library(tseries)
library(readr)
CostoFinanciero <- read_csv("costoFinancieroSerie.csv")
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
TSCostoFinancieroStationarityTest <- adf.test(TSCostoFInancieroIngresosPresupuestarios, alternative="stationary")
TSCostoFinancieroStationarityTest <- adf.test(TSCostoFinanciero, alternative="stationary")
TSCostoFinancieroStationarityTest
TSIngresosPresupuestariosStationarityTest <- adf.test(TSIngresosPresupuestariosSuavizado, alternative="stationary")
library(astsa)
library(stats)
library(tseries)
library(seasonal)
library(forecast)
library(highcharter)
IngresosPresupuestariosSuavizado <- ma(TSIngresosPresupuestarios, order=2)
library(tseries)
IngresosPresupuestarios <- read_csv("IngresosPresupuestariosSerie.csv")
TSIngresosPresupuestarios <- ts(IngresosPresupuestarios, start = c(2016, 10), end = c(2020,4), frequency=12)
library(astsa)
library(stats)
library(tseries)
library(seasonal)
library(forecast)
library(highcharter)
IngresosPresupuestariosSuavizado <- ma(TSIngresosPresupuestarios, order=2)
IngresosPresupuestariosSuavizado <- na.omit(IngresosPresupuestariosSuavizado)
hchart(IngresosPresupuestariosSuavizado)
TSIngresosPresupuestariosStationarityTest <- adf.test(TSIngresosPresupuestariosSuavizado, alternative="stationary")
library(astsa)
library(stats)
library(tseries)
library(seasonal)
library(forecast)
library(highcharter)
IngresosPresupuestariosSuavizado <- ma(TSIngresosPresupuestarios, order=2)
IngresosPresupuestariosSuavizado <- na.omit(IngresosPresupuestariosSuavizado)
hchart(IngresosPresupuestariosSuavizado)
TSIngresosPresupuestariosStationarityTest <- adf.test(IngresosPresupuestariosSuavizado, alternative="stationary")
TSIngresosPresupuestariosStationarityTest
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
componenteEstacionalCostoFinanciero <- stl(CostoFinanciero, s.window="periodic")
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
library(tseries)
library(readr)
CostoFinanciero <- read_csv("costoFinancieroSerie.csv")
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
TSCostoFinancieroStationarityTest <- adf.test(TSCostoFinanciero, alternative="stationary")
TSCostoFinancieroStationarityTest
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
View(CostoFinanciero)
library(tseries)
library(readr)
CostoFinancieroSerie <- read_csv("CostoFinancieroSerie.csv",
col_types = cols(CostoFinanciero = col_number()))
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
TSCostoFinancieroStationarityTest <- adf.test(TSCostoFinanciero, alternative="stationary")
TSCostoFinancieroStationarityTest
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
library(tseries)
library(readr)
CostoFinancieroSerie <- read_csv("CostoFinancieroSerie.csv",
col_types = cols(CostoFinanciero = col_number()))
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
componenteEstacionalCostoFinanciero <- stl(CostoFinanciero, s.window="periodic")
View(CostoFinanciero)
library(tseries)
library(readr)
CostoFinancieroSerie <- read_csv("CostoFinancieroSerie.csv",
col_types = cols(CostoFinanciero = col_number()))
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
omit.na(TSCostoFinanciero)
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
TSCostoFinancieroStationarityTest <- adf.test(TSCostoFinanciero, alternative="stationary")
TSCostoFinancieroStationarityTest
componenteEstacionalCostoFinanciero <- stl(CostoFinanciero, s.window="periodic")
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
TSCostoFinancieroStationarityTest <- adf.test(TSCostoFinanciero, alternative="stationary")
TSCostoFinancieroStationarityTest
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
componenteEstacionalCostoFinanciero <- stl(CostoFinancieroSerie, s.window="periodic")
TSCostoFinancieroStationarityTest <- adf.test(TSCostoFinanciero, alternative="stationary")
TSCostoFinancieroStationarityTest
componenteEstacionalCostoFinanciero <- stl(CostoFinancieroSerie, s.window="periodic")
cef <- stl(CostoFinancieroSerie, s.window="periodic")
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
CostoFinancieroSuavizado <- ma(TSCostoFinanciero, order=2)
CostoFinancieroSuavizadoSuavizado <- na.omit(CostoFinancieroSuavizado)
hchart(CostoFinancieroSuavizado)
componenteEstacionalCostoFinanciero <- stl(CostoFinancieroSuavizado, s.window="periodic")
CostoFinancieroSuavizado <- ma(TSCostoFinanciero, order=2)
CostoFinancieroSuavizado <- na.omit(CostoFinancieroSuavizado)
hchart(CostoFinancieroSuavizado)
componenteEstacionalCostoFinanciero <- stl(CostoFinancieroSuavizado, s.window="periodic")
CostoFinancieroDesestacionalizado <- seasadj(componenteEstacionalCostoFinanciero)
hchart(CostoFinancieroDesestacionalizado)
CostoFinancieroSuavizado <- na.omit(CostoFinancieroSuavizado)
hchart(CostoFinancieroSuavizado)
componenteEstacionalCostoFinanciero <- stl(CostoFinancieroSuavizado, s.window="periodic")
CostoFinancieroDesestacionalizado <- seasadj(componenteEstacionalCostoFinanciero)
hchart(CostoFinancieroDesestacionalizado)
TSCostoFinanciero <- na.omit(TsCostoFinanciero)
TSCostoFinanciero <- na.omit(TSCostoFinanciero)
componenteEstacionalCostoFinanciero <- stl(TSCostoFinanciero, s.window="periodic")
CostoFinancieroSuavizado <- na.omit(CostoFinancieroSuavizado)
hchart(CostoFinancieroSuavizado)
componenteEstacionalCostoFinanciero <- stl(CostoFinancieroSuavizado, s.window="periodic")
CostoFinancieroDesestacionalizado <- seasadj(componenteEstacionalCostoFinanciero)
hchart(CostoFinancieroDesestacionalizado)
CostoFinancieroSuavizado <- ma(TSCostoFinanciero, order=2)
CostoFinancieroSuavizado <- na.omit(CostoFinancieroSuavizado)
hchart(CostoFinancieroSuavizado)
componenteEstacionalCostoFinanciero <- stl(CostoFinancieroSuavizado, s.window="periodic")
CostoFinancieroDesestacionalizado <- seasadj(componenteEstacionalCostoFinanciero)
hchart(CostoFinancieroDesestacionalizado)
fitcf <- arima(CostoFinancieroDesestacionalizado, order=c(0,1,1),seasonal = list(order = c(1,1,0), period = 12),method="ML")
prediccioncf <- forecast(fitcf, h=12)
hchart(prediccioncf)
library(dplyr)
CostoFinancieroSinPandemia <- CostoFinanciero %>% slice(-c(42,43))
TSCostoFinancieroSinPandemia <- ts(CostoFinancieroSinPandemia, start = c(2016, 10), end = c(2020,2), frequency=12)
CostoFinancieroSinPandemiaSuavizado <- ma(TSCostoFinancieroSinPandemia, order=2)
CostoFinancieroSinPandemiaSuavizado <- na.omit(CostoFinancieroSinPandemiaSuavizado)
componenteEstacional <- stl(CostoFinancieroSinPandemiaSuavizado, s.window="periodic")
CostoFinancieroSinPandemiaDesestacionalizado <- seasadj(componenteEstacional)
hchart(CostoFinancieroSinPandemiaDesestacionalizado)
fit <- arima(CostoFinancieroSinPandemiaDesestacionalizado, order=c(0,1,1),seasonal = list(order = c(1,1,0), period = 12),method="ML")
prediccionIngresosSinPandemia <- forecast(fit, h=14)
hchart(prediccionIngresosSinPandemia)
library(readr)
PrediccionesSuperpuestasCostoFinanciero <- read_csv("PrediccionesSuperpuestasCostoFinanciero.csv",
col_types = cols(Fecha = col_date(format = "%d/%m/%Y")))
library(plotly)
CostoFinancieroSuperpuestosCon <- PrediccionesSuperpuestasCostoFiananciero[which(PrediccionesSuperpuestasCostoFinanciero$Estatus == "Con Pandemia"),]
library(readr)
PrediccionesSuperpuestasCostoFinanciero <- read_csv("PrediccionesSuperpuestasCostoFinanciero.csv",
col_types = cols(Fecha = col_date(format = "%d/%m/%Y")))
library(plotly)
CostoFinancieroSuperpuestosCon <- PrediccionesSuperpuestasCostoFinanciero[which(PrediccionesSuperpuestasCostoFinanciero$Estatus == "Con Pandemia"),]
density1 <- density(IngresosSuperpuestosCon$Valor)
library(readr)
PrediccionesSuperpuestasCostoFinanciero <- read_csv("PrediccionesSuperpuestasCostoFinanciero.csv",
col_types = cols(Fecha = col_date(format = "%d/%m/%Y")))
library(plotly)
CostoFinancieroSuperpuestosCon <- PrediccionesSuperpuestasCostoFinanciero[which(PrediccionesSuperpuestasCostoFinanciero$Estatus == "Con Pandemia"),]
density1 <- density(CsotoFinancieroSuperpuestosCon$Valor)
library(readr)
PrediccionesSuperpuestasCostoFinanciero <- read_csv("PrediccionesSuperpuestasCostoFinanciero.csv",
col_types = cols(Fecha = col_date(format = "%d/%m/%Y")))
library(plotly)
CostoFinancieroSuperpuestosCon <- PrediccionesSuperpuestasCostoFinanciero[which(PrediccionesSuperpuestasCostoFinanciero$Estatus == "Con Pandemia"),]
density1 <- density(CostoFinancieroSuperpuestosCon$Valor)
CostoFinancieroSuperpuestosSin <- PrediccionesSuperpuestasCostoFinanciero[which(PrediccionesSuperpuestasCostoFinanciero$Estatus == "Sin Pandemia"),]
density2 <- density(CostoFinancieroSuperpuestosSin$Valor)
fig <- plot_ly(x = ~density1$x, y = ~density1$y, type = 'scatter', mode = 'lines', name = 'Predicción con pandemia', fill = 'tozeroy')
fig <- fig %>% add_trace(x = ~density2$x, y = ~density2$y, name = 'Predicción sin pandemia', fill = 'tozeroy')
fig <- fig %>% layout(xaxis = list(title = 'Ingresos Presupuestarios'),
yaxis = list(title = 'Densidad'))
fig
library(readr)
PrediccionesSuperpuestasCostoFinanciero <- read_csv("PrediccionesSuperpuestasCostoFinanciero.csv",
col_types = cols(Fecha = col_date(format = "%d/%m/%Y")))
library(plotly)
CostoFinancieroSuperpuestosCon <- PrediccionesSuperpuestasCostoFinanciero[which(PrediccionesSuperpuestasCostoFinanciero$Estatus == "Con Pandemia"),]
density1 <- density(CostoFinancieroSuperpuestosCon$Valor)
CostoFinancieroSuperpuestosSin <- PrediccionesSuperpuestasCostoFinanciero[which(PrediccionesSuperpuestasCostoFinanciero$Estatus == "Sin Pandemia"),]
density2 <- density(CostoFinancieroSuperpuestosSin$Valor)
fig <- plot_ly(x = ~density1$x, y = ~density1$y, type = 'scatter', mode = 'lines', name = 'Predicción con pandemia', fill = 'tozeroy')
fig <- fig %>% add_trace(x = ~density2$x, y = ~density2$y, name = 'Predicción sin pandemia', fill = 'tozeroy')
fig <- fig %>% layout(xaxis = list(title = 'Costo Financiero'),
yaxis = list(title = 'Densidad'))
fig
library(tseries)
library(readr)
CostoFinanciero <- read_csv("CostoFinancieroSerie.csv",
col_types = cols(CostoFinanciero = col_number()))
TSCostoFinanciero <- ts(CostoFinanciero, start = c(2016, 10), end = c(2020,4), frequency=12)
componenteEstacional <- stl(IngresosPresupuestariosSuavizado, s.window="periodic")
IngresosPresupuestariosDesestacionalizado <- seasadj(componenteEstacional)
hchart(IngresosPresupuestariosDesestacionalizado, showInLegend = FALSE)
fit <- arima(IngresosPresupuestariosDesestacionalizado, order=c(0,1,1),seasonal = list(order = c(1,1,0), period = 12),method="ML")
prediccion1 <- forecast(fit, h=12)
hchart(prediccion1, showInLegend = FALSE)
library(dplyr)
IngresosPresupuestariosSinPandemia <- IngresosPresupuestarios %>% slice(-c(42,43))
TSIngresosPresupuestariosSinPandemia <- ts(IngresosPresupuestariosSinPandemia, start = c(2016, 10), end = c(2020,2), frequency=12)
IngresosPresupuestariosSinPandemiaSuavizado <- ma(TSIngresosPresupuestariosSinPandemia, order=2)
IngresosPresupuestariosSinPandemiaSuavizado <- na.omit(IngresosPresupuestariosSinPandemiaSuavizado)
componenteEstacional <- stl(IngresosPresupuestariosSinPandemiaSuavizado, s.window="periodic")
IngresosPresupuestariosSinPandemiaDesestacionalizado <- seasadj(componenteEstacional)
hchart(IngresosPresupuestariosSinPandemiaDesestacionalizado)
fit <- arima(IngresosPresupuestariosSinPandemiaDesestacionalizado, order=c(0,1,1),seasonal = list(order = c(1,1,0), period = 12),method="ML")
prediccionIngresosSinPandemia <- forecast(fit, h=14)
hchart(prediccionIngresosSinPandemia, showInLegend = FALSE)
fitcf <- arima(CostoFinancieroDesestacionalizado, order=c(0,1,1),seasonal = list(order = c(1,1,0), period = 12),method="ML")
prediccioncf <- forecast(fitcf, h=12)
hchart(prediccioncf, showInLegend = FALSE)
fitcf <- arima(CostoFinancieroDesestacionalizado, order=c(0,1,1),seasonal = list(order = c(1,1,0), period = 12),method="ML")
prediccioncf <- forecast(fitcf, h=12)
hchart(prediccioncf)
library(dplyr)
CostoFinancieroSinPandemia <- CostoFinanciero %>% slice(-c(42,43))
TSCostoFinancieroSinPandemia <- ts(CostoFinancieroSinPandemia, start = c(2016, 10), end = c(2020,2), frequency=12)
CostoFinancieroSinPandemiaSuavizado <- ma(TSCostoFinancieroSinPandemia, order=2)
CostoFinancieroSinPandemiaSuavizado <- na.omit(CostoFinancieroSinPandemiaSuavizado)
componenteEstacional <- stl(CostoFinancieroSinPandemiaSuavizado, s.window="periodic")
CostoFinancieroSinPandemiaDesestacionalizado <- seasadj(componenteEstacional)
fit <- arima(CostoFinancieroSinPandemiaDesestacionalizado, order=c(0,1,1),seasonal = list(order = c(1,1,0), period = 12),method="ML")
prediccionIngresosSinPandemia <- forecast(fit, h=14)
hchart(prediccionIngresosSinPandemia)
knit_with_parameters('~/Analisis1Simon/Reporte.Rmd', encoding = 'UTF-8')
